#SKHD STUFF
# debug


# if you're having troubles finding key codes for a key just type skhd --observe in a terminal and type a key. Pretty cool! Or just check the wiki.

## HYPER == SHIFT + CMD + ALT + OPTION

## Quickly restart the yabai launch agent
lshift + alt + ctrl - r : yabai --restart-service
lshift + alt + ctrl - t : skhd --restart-service && killall Superkey && sleep 0.5 && open -a "Superkey" && terminal-notifier -message "skhd restarted"
## Close active application
#hyper - backspace : $(yabai -m window $(yabai -m query --windows --window | jq -re ".id") --close)

# test a command
# lshift - x : terminal-notifier -message "lshift - x"
#lshift + lalt - x : terminal-notifier -message "$(yabai -m query --windows --window | jq -re ".id")"
# log to a file
lshift + lalt - x : echo "$(yabai -m query --windows --window)" >> ~/.config/CustomScripts/log.txt
# fast switch between spaces
cmd - tab : yabai -m space --focus next
cmd - 0x32 : yabai -m space --focus prev # the backtick key

# fast show desktop
hyper - d : yabai -m space --toggle show-desktop

# Properties toggling
## fullscreen
hyper - f : yabai -m window --toggle zoom-fullscreen
lalt - f : yabai -m window --toggle native-fullscreen
## split
hyper - g : yabai -m window --toggle split
## float
hyper - t : ~/.config/CustomScripts/toggle-window-floating-tiling.sh
## center
hyper - c : yabai -m window --grid 5:5:1:1:3:3
## sticky
hyper - 0x2A : yabai -m window --toggle sticky #\ key
## pip
# hyper - p : yabai -m window --toggle pip
hyper - p : ~/.config/CustomScripts/toggle-pip.sh

# toggle space float/bsp layout
lshift + alt - t : ~/.config/CustomScripts/SwitchSpaces/toggle-layout.sh && terminal-notifier -message "layout toggled"

# raycast
rcmd - space : skhd -k "shift + ctrl - end"
# Arrow Keys
lctrl - h : skhd -k "left"
lctrl - j : skhd -k "down"
lctrl - k : skhd -k "up"
lctrl - l : skhd -k "right"

## Arrow Keys Extension
lctrl + lalt - h : skhd -k "alt - left"
lctrl + lalt - j : skhd -k "alt - down"
lctrl + lalt - k : skhd -k "alt - up"
lctrl + lalt - l : skhd -k "alt - right"

lctrl + lcmd - h : skhd -k "cmd - left"
lctrl + lcmd - k : skhd -k "cmd - up"
lctrl + lcmd - j : skhd -k "cmd - down"
lctrl + lcmd - l : skhd -k "cmd - right"

lctrl + lalt + lshift - h : skhd -k "shift + alt - left"
lctrl + lalt + lshift - j : skhd -k "shift + alt - down"
lctrl + lalt + lshift - k : skhd -k "shift + alt - up"
lctrl + lalt + lshift - l : skhd -k "shift + alt - right"

lctrl + lcmd + lshift - h : skhd -k "shift + cmd - left"
lctrl + lcmd + lshift - j : skhd -k "shift + cmd - down"
lctrl + lcmd + lshift - k : skhd -k "shift + cmd - up"
lctrl + lcmd + lshift - l : skhd -k "shift + cmd - right"
## Launch iTerm2
hyper - 0x24 : osascript ~/.config/CustomScripts/open_iterm.scpt

# new space
lalt - n : yabai -m space --create && \
	index="$(yabai -m query --spaces --display | jq 'map(select(."is-native-fullscreen" == false))[-1].index')" && \
	yabai -m space --focus "${index}"

# new space and move window
lshift + lalt - n : yabai -m space --create && \
    index="$(yabai -m query --spaces --display | jq 'map(select(."is-native-fullscreen" == false))[-1].index')" && \
    yabai -m window --space "${index}" && \
    yabai -m space --focus "${index}"

# destroy current space and all empty spaces
lshift + lalt - backspace :
	index="$(yabai -m query --spaces --display | jq 'map(select(."has-focus" == true))[0].index')" && \
	yabai -m space --destroy && \
	yabai -m space --focus "${index}" || yabai -m space --focus "$(($index - 1))" \
	&& yabai -m query --spaces --display | \
	jq -re 'map(select(."is-native-fullscreen" == false)) | length > 1' \
	&& yabai -m query --spaces | \
	jq -re 'map(select(."windows" == []).index) | reverse | .[] ' | \
	xargs -I % sh -c 'yabai -m space % --destroy'

# move active window to next space
lalt + lshift - 0x21 : 
	index="$(yabai -m query --windows --window | jq -re ".id")" && \
	yabai -m window --space prev && yabai -m space --focus prev && \
	yabai -m window --focus "$index"
lalt + lshift - 0x1E : 
	index="$(yabai -m query --windows --window | jq -re ".id")" && \
	yabai -m window --space next && yabai -m space --focus next && \
	yabai -m window --focus "$index"

# move active window to next display
lalt + lshift + lctrl - 0x21 :
	index="$(yabai -m query --windows --window | jq -re ".id")" && \
	yabai -m window --display prev && yabai -m display --focus prev && \
	yabai -m window --focus "$index"

lalt + lshift + lctrl - 0x1E :
	index="$(yabai -m query --windows --window | jq -re ".id")" && \
	yabai -m window --display next && yabai -m display --focus next && \
	yabai -m window --focus "$index"

# resize window
hyper - h : yabai -m window --resize left:-20:0 || yabai -m window --resize right:-20:0
hyper - j : yabai -m window --resize bottom:0:20 || yabai -m window --resize top:0:20
hyper - k : yabai -m window --resize top:0:-20 || yabai -m window --resize bottom:0:-20
hyper - l : yabai -m window --resize right:20:0 || yabai -m window --resize left:20:0

# focus window
lalt - h : yabai -m window --focus west
lalt - j : yabai -m window --focus south
lalt - k : yabai -m window --focus north
lalt - l : yabai -m window --focus east

# warp window
lalt + lshift - h : yabai -m window --warp west
lalt + lshift - j : yabai -m window --warp south
lalt + lshift - k : yabai -m window --warp north
lalt + lshift - l : yabai -m window --wrap east

## swap window
alt + lshift - a : yabai -m window --swap west
alt + lshift - d : yabai -m window --swap east
alt + lshift - w : yabai -m window --swap north
alt + lshift - s : yabai -m window --swap south

# focus display
hyper - 1 : yabai -m display --focus 1 && osascript ~/.config/CustomScripts/SwitchSpaces/move-mouse.scpt
hyper - 2 : yabai -m display --focus 2 && osascript ~/.config/CustomScripts/SwitchSpaces/move-mouse.scpt
hyper - 3 : yabai -m display --focus 3 && osascript ~/.config/CustomScripts/SwitchSpaces/move-mouse.scpt

fn - f : conda run -n base ~/.config/CustomScripts/notch-fullscreen.sh
#fn - f : sudo frida -q -l ~/.config/CustomScripts/OverNotch.js -e "toggleFullScreen()" $(osascript -e 'tell application "System Events" to get unix id of first application process whose frontmost is true')

# ## focus space (sip-enabled version)
# hyper - q: skhd -k "ctrl - left"
# hyper - e: skhd -k "ctrl - right"

# ## auto balance space
# hyper - o : yabai -m space --balance



## swap window counter clockwise
#alt + rshift - q : ~/.config/CustomScripts/SwitchSpaces/cycle_counterclockwise.sh


## send window to monitor and follow focus
# hyper - u : ~/.config/CustomScripts/SwitchSpaces/moveWindowLeftAndFollowFocus.sh
# hyper - p : ~/.config/CustomScripts/SwitchSpaces/moveWindowRightAndFollowFocus.sh



## focus space
### cycle through spaces on current display (requires sip to be disabled)
# ### forward
# hyper - 0x21 : id="$(yabai -m query --spaces --display | jq 'sort_by(.index) | reverse | .[map(."has-focus") | index(true) - 1].index')" && yabai -m space --focus "${id}"
# hyper - 0x1E : id="$(yabai -m query --spaces --display | jq 'sort_by(.index) | .[map(."has-focus") | index(true) - 1].index')" && yabai -m space --focus "${id}"
# ### backward


## increase window size
#shift + alt - a : yabai -m window --resize left:-20:0
#shift + alt - s : yabai -m window --resize bottom:0:20
#shift + alt - w : yabai -m window --resize top:0:-20
#shift + alt - d : yabai -m window --resize right:20:0

## decrease window size
#shift + cmd - a : yabai -m window --resize left:20:0
#shift + cmd - s : yabai -m window --resize bottom:0:-20
#shift + cmd - w : yabai -m window --resize top:0:20
#shift + cmd - d : yabai -m window --resize right:-20:0

## rotate tree 90
# hyper - r : yabai -m space --rotate 90

# ## flip the tree vertically
# hyper - 4 : yabai -m space --mirror y-axis
# mirror tree y-axis
#alt - y : yabai -m space --mirror y-axis
## mirror tree x-axis
#alt - x : yabai -m space --mirror x-axis

# ## general implementation
# show next space per display
#hyper - 1 : /Users/jesseskelton/CustomScripts/SwitchSpaces/switchAndFocus.sh 1
#hyper - 2 : /Users/jesseskelton/CustomScripts/SwitchSpaces/switchAndFocus.sh 2
#hyper - 3 : /Users/jesseskelton/CustomScripts/SwitchSpaces/switchAndFocus.sh 3
#ctrl + alt + cmd + lshift - 1 : ~/.config/CustomScripts/SwitchSpaces/switchAndFocusSIP.sh 1
#ctrl + alt + cmd + lshift - 2 : ~/.config/CustomScripts/SwitchSpaces/switchAndFocusSIP.sh 2
#ctrl + alt + cmd + lshift - 3 : ~/.config/CustomScripts/SwitchSpaces/switchAndFocusSIP.sh 3

## toggle window fullscreen zoom
# hyper - f : yabai -m window --toggle zoom-fullscreen

# cycle through windows
# cycle backwards
#hyper - i : yabai -m query --spaces | jq -re ".[] | select(.visible == 1).index" | xargs -I{} yabai -m query --windows --space {} | jq -sre "add | sort_by(.display, .frame.x, .frame.y, .id) | nth(index(map(select(.focused == 1))) - 1).id" | xargs -I{} yabai -m window --focus {}
#hyper - i : yabai -m query --spaces | jq -re ".[] | select(.visible == 1).index" | xargs -I{} yabai -m query --windows --space {} | jq -sre "add | sort_by(.display, .frame.x, .frame.y, .id) | nth(index(map(select(.focused == 1))) - 1).id" | xargs -I{} yabai -m window --focus {}

#alt - p : yabai -m window --focus stack.prev || yabai -m window --focus prev || yabai -m window --focus last
#
# go to each window WITHOUT going into a stack
# ctrl + alt + cmd + lshift - i : yabai -m query --spaces | jq -re ".[] | select(.visible == 1).index" | xargs -I{} yabai -m query --windows --space {} | jq -re "[.[] | select((.\"stack-index\" <= 1) and (.app != \"Hammerspoon\"))]" | jq -sre "add | sort_by(.display, .frame.x, .frame.y, .id) | nth(index(map(select(.focused == 1))) - 1).id" | xargs -I{} yabai -m window --focus {}
#ctrl + alt + cmd + lshift - i : yabai -m query --spaces | jq -re ".[] | select(.visible == 1).index" | xargs -I{} yabai -m query --windows --space {} | jq -re "[.[] | select(.app != \"Hammerspoon\")]" | jq -sre "add | sort_by(.display, .frame.x, .frame.y, .id) | nth(index(map(select(.focused == 1))) - 1).id" | xargs -I{} yabai -m window --focus {}

# ctrl + alt + cmd + rshift - i : yabai -m window --focus stack.prev || yabai -m window --focus stack.last

#hyper - 0x29 : yabai -m query --spaces \
#hyper - o : yabai -m query --spaces | jq -re ".[] | select(.visible == 1).index" | xargs -I{} yabai -m query --windows --space {} | jq -sre "add | sort_by(.display, .frame.x, .frame.y, .id) | reverse | nth(index(map(select(.focused == 1))) - 1).id" | xargs -I{} yabai -m window --focus {}

#alt - n : yabai -m window --focus stack.next || yabai -m window --focus next || yabai -m window --focus first

# go to each window WITHOUT going into a stack
# ctrl + alt + cmd + lshift - o : yabai -m query --spaces | jq -re ".[] | select(.visible == 1).index" | xargs -I{} yabai -m query --windows --space {} | jq -re "[.[] | select((.\"stack-index\" <= 1) and (.app != \"Hammerspoon\"))]" | jq -sre "add | sort_by(.display, .frame.x, .frame.y, .id) | reverse | nth(index(map(select(.focused == 1))) - 1).id" | xargs -I{} yabai -m window --focus {}
#ctrl + alt + cmd + lshift - o : yabai -m query --spaces | jq -re ".[] | select(.visible == 1).index" | xargs -I{} yabai -m query --windows --space {} | jq -re "[.[] | select(.app != \"Hammerspoon\")]" | jq -sre "add | sort_by(.display, .frame.x, .frame.y, .id) | reverse | nth(index(map(select(.focused == 1))) - 1).id" | xargs -I{} yabai -m window --focus {}

# Toggle foucus on a stack
# ctrl + alt + cmd + lshift - return : yabai -m window --focus stack.next || yabai -m window --focus stack.first

#create a stack
# ctrl + alt + cmd + rshift - 1 : yabai -m query --windows --window | jq -re "." | xargs -I{} yabai -m window 1 --stack {}
# stack next window onto current window
#hyper - c : window=$(yabai -m query --windows --window | jq -r '.id') && yabai -m window east --stack $window || (yabai -m window $window --toggle float && yabai -m window $window --toggle float)
## 0x43 is the key code for the 'c' key
################################################################
############################# UNUSED ###########################
################################################################

## float / unfloat window and center on screen
# hyper - t : yabai -m window --toggle float;yabai -m window --grid 5:5:1:1:3:3
# ## toggle sticky
# hyper - 0x1B : yabai -m window --toggle sticky; yabai -m window --toggle topmost
# 4:4:1:1:2:2 is the grid for centering a window on a 4x4 grid
# <rows>:<cols>:<start-x>:<start-y>:<width>:<height>
# if we want to center a window on a 3x3 grid, we would use 3:3:1:1:1:1
# for 5x5 grid and make it take up 3x3, we would use 5:5:1:1:3:3
#yabai -m window --grid 4:4:1:1:2:2 ## toggle sticky alt - s : yabai -m window --toggle sticky ## toggle sticky, float and resize to picture-in-picture size alt - p : yabai -m window --toggle sticky;\ yabai -m window --grid 5:5:4:0:1:1 ## change layout of desktop ctrl + alt - a : yabai -m space --layout bsp ctrl + alt - d : yabai -m space --layout float

## toggle pip


## toggle window split
# hyper - c : yabai -m window --toggle split

# ## preview window split
# alt - a : yabai -m window --insert west
# alt - d : yabai -m window --insert east
# alt - w : yabai -m window --insert north
# alt - s : yabai -m window --insert south

# ## toggle space float/bsp layout
# lshift + alt - t : ~/.config/CustomScripts/SwitchSpaces/toggle-layout.sh

## toggle window border
#shift + alt - b : yabai -m window --toggle border

## create desktop, move window and follow focus
#shift + cmd - n : yabai -m space --create && \
#index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && \
#yabai -m window --space "${index}" && \
#yabai -m space --focus "${index}"

## create desktop and follow focus
#shift + alt - n : yabai -m space --create && \
#index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && \
#yabai -m space --focus "${index}"

## destroy desktop
#cmd + alt - w : yabai -m space --destroy

## fast focus desktop
#cmd + alt - x : yabai -m space --focus last
#cmd + alt - z : yabai -m space --focus prev
#cmd + alt - c : yabai -m space --focus next
#cmd + alt - 1 : yabai -m space --focus 1
#cmd + alt - 2 : yabai -m space --focus 2
#cmd + alt - 3 : yabai -m space --focus 3
#cmd + alt - 4 : yabai -m space --focus 4
#cmd + alt - 5 : yabai -m space --focus 5
#cmd + alt - 6 : yabai -m space --focus 6
#cmd + alt - 7 : yabai -m space --focus 7
#cmd + alt - 8 : yabai -m space --focus 8
#cmd + alt - 9 : yabai -m space --focus 9
#cmd + alt - 0 : yabai -m space --focus 10

## move window
#shift + ctrl - a : yabai -m window --move rel:-20:0
#shift + ctrl - s : yabai -m window --move rel:0:20
#shift + ctrl - w : yabai -m window --move rel:0:-20
#shift + ctrl - d : yabai -m window --move rel:20:0

## Swap window
# hyper - y : yabai -m window --warp west
# shift + cmd - j : yabai -m window --warp south
# shift + cmd - k : yabai -m window --warp north
# hyper - 0x21 : yabai -m window --warp east # "[" key

## focus monitor
#ctrl + alt - x  : yabai -m display --focus last
#ctrl + alt - z  : yabai -m display --focus prev || yabai -m display --focus last
#ctrl + alt - c  : yabai -m display --focus next || yabai -m display --focus first
#ctrl + alt - 1  : yabai -m display --focus 1
#ctrl + alt - 2  : yabai -m display --focus 2
#ctrl + alt - 3  : yabai -m display --focus 3

